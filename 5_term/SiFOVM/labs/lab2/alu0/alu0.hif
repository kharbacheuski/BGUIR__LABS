HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			1 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5];
			6 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4];
			10 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			2 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,result0,result1,result2,result3,result4,result5];
			3 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,result0,result1,result2,result3,result4,result5,result6];
			7 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,result0,result1,result2,result3,result4];
			8 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,result0,result1,result2,result3,result4,result5];
			11 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
			12 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6,result7];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			4 [DEPTH=0,WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,data5,result0,result1,result2,result3,result4,result5];
			5 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,result0];
			9 [DEPTH=0,WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,result0,result1,result2,result3,result4];
			13 [DEPTH=0,WIDTH=7,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,data5,data6,result0,result1,result2,result3,result4,result5,result6];
		}
	}
	alu0.vhd
	{
		alu0 [] [U9234712.DLS,U9587408.DLS,U3877600.DLS,U4470260.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	alu0::(0,0):(0): alu0.vhd
	{
		lpm_add_sub:1:(26,1):(341): lpm_add_sub.tdf
		{
			addcore:2:(212,4):(52,adder): addcore.tdf
			{
				addcore:3:(178,10):(49,adder0): addcore.tdf;
			}
			altshift:4:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:6:(26,1):(343): lpm_add_sub.tdf
		{
			addcore:7:(212,4):(49,adder): addcore.tdf
			{
				addcore:8:(178,10):(46,adder0): addcore.tdf;
			}
			altshift:9:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:1:(27,1):(393): lpm_add_sub.tdf
		{
			addcore:2:(212,4):(52,adder): addcore.tdf
			{
				addcore:3:(178,10):(49,adder0): addcore.tdf;
			}
			altshift:4:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:10:(27,1):(394): lpm_add_sub.tdf
		{
			addcore:11:(212,4):(55,adder): addcore.tdf
			{
				addcore:12:(178,10):(52,adder0): addcore.tdf;
			}
			altshift:13:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:6:(27,1):(396): lpm_add_sub.tdf
		{
			addcore:7:(212,4):(49,adder): addcore.tdf
			{
				addcore:8:(178,10):(46,adder0): addcore.tdf;
			}
			altshift:9:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:1:(28,1):(446): lpm_add_sub.tdf
		{
			addcore:2:(212,4):(52,adder): addcore.tdf
			{
				addcore:3:(178,10):(49,adder0): addcore.tdf;
			}
			altshift:4:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:10:(28,1):(447): lpm_add_sub.tdf
		{
			addcore:11:(212,4):(55,adder): addcore.tdf
			{
				addcore:12:(178,10):(52,adder0): addcore.tdf;
			}
			altshift:13:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:6:(28,1):(449): lpm_add_sub.tdf
		{
			addcore:7:(212,4):(49,adder): addcore.tdf
			{
				addcore:8:(178,10):(46,adder0): addcore.tdf;
			}
			altshift:9:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
			altshift:5:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
			altshift:5:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
		}
	}
}
