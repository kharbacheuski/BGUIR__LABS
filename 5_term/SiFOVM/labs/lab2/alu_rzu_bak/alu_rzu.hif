HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,DEPTH=0] [result6,result5,result4,result3,result2,result1,result0,data6,data5,data4,data3,data2,data1,data0];
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=5,DEPTH=0] [result4,result3,result2,result1,result0,data4,data3,data2,data1,data0];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [result0,data0];
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,DEPTH=0] [result5,result4,result3,result2,result1,result0,data5,data4,data3,data2,data1,data0];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10KA] [result6,result5,result4,result3,result2,result1,result0,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=5,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10KA] [result4,result3,result2,result1,result0,dataa4,dataa3,dataa2,dataa1,dataa0,datab4,datab3,datab2,datab1,datab0,cin];
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=6,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10KA] [result5,result4,result3,result2,result1,result0,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0,cin];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10KA,STYLE=NORMAL] [RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=5,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10KA,STYLE=NORMAL] [RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10KA,STYLE=NORMAL] [RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
		}
	}
	lab1.gdf
	{
		lab1 [] []
		{
			12 [] [];
		}
	}
	regandtries.gdf
	{
		regandtries [] []
		{
			13 [] [];
		}
	}
	74138.gdf
	{
		74138 [] [];
	}
	alu_.gdf
	{
		alu_ [] [];
	}
	rwreg.gdf
	{
		rwreg [] []
		{
			14 [] [];
		}
	}
	alu0.vhd
	{
		alu0 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U4470260.DLS,U3877600.DLS,U9587408.DLS,U9234712.DLS]
		{
			1 [] [];
		}
	}
	dec.gdf
	{
		dec [] []
		{
			15 [] [];
		}
	}
	alu_rzu.gdf
	{
		alu_rzu [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	alu_rzu::(0,0):(0): alu_rzu.gdf
	{
		alu0::(0,0):(22): alu0.vhd
		{
			lpm_add_sub:2:(26,1):(341): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(52,adder): addcore.tdf;
				altshift:4:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:6:(26,1):(343): lpm_add_sub.tdf
			{
				addcore:7:(212,4):(49,adder): addcore.tdf;
				altshift:8:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:2:(27,1):(393): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(52,adder): addcore.tdf;
				altshift:4:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:9:(27,1):(394): lpm_add_sub.tdf
			{
				addcore:10:(212,4):(55,adder): addcore.tdf;
				altshift:11:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:6:(27,1):(396): lpm_add_sub.tdf
			{
				addcore:7:(212,4):(49,adder): addcore.tdf;
				altshift:8:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:2:(28,1):(446): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(52,adder): addcore.tdf;
				altshift:4:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:9:(28,1):(447): lpm_add_sub.tdf
			{
				addcore:10:(212,4):(55,adder): addcore.tdf;
				altshift:11:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:6:(28,1):(449): lpm_add_sub.tdf
			{
				addcore:7:(212,4):(49,adder): addcore.tdf;
				altshift:8:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		lab1::(0,0):(32): lab1.gdf
		{
			regandtries:13:(0,0):(10): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(9): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(8): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(7): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(6): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(5): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(2): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			regandtries:13:(0,0):(1): regandtries.gdf
			{
				rwreg:14:(0,0):(64): rwreg.gdf;
			}
			dec:15:(0,0):(39): dec.gdf;
			dec:15:(0,0):(40): dec.gdf;
		}
	}
}
