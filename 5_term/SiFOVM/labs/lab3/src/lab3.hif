HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	rg.gdf
	{
		rg [] []
		{
			1 [] [];
		}
	}
	stack.gdf
	{
		stack [] []
		{
			2 [] [];
		}
	}
	mux4b1.gdf
	{
		mux4b1 [] []
		{
			6 [] [];
		}
	}
	incr.gdf
	{
		incr [] []
		{
			8 [] [];
		}
	}
	rg_lr.gdf
	{
		rg_lr [] []
		{
			3 [] [];
		}
	}
	reg.gdf
	{
		reg [] []
		{
			4 [] [];
		}
	}
	21mux.gdf
	{
		21mux [] []
		{
			5 [] [];
		}
	}
	mux41.gdf
	{
		mux41 [] []
		{
			7 [] [];
		}
	}
	lab3.gdf
	{
		lab3 [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	lab3::(0,0):(0): lab3.gdf
	{
		stack::(0,0):(29): stack.gdf
		{
			rg_lr:3:(0,0):(61): rg_lr.gdf
			{
				reg:4:(0,0):(16): reg.gdf;
				21mux:5:(0,0):(33): 21mux.gdf;
				21mux:5:(0,0):(36): 21mux.gdf;
				21mux:5:(0,0):(35): 21mux.gdf;
				21mux:5:(0,0):(34): 21mux.gdf;
			}
			rg_lr:3:(0,0):(64): rg_lr.gdf
			{
				reg:4:(0,0):(16): reg.gdf;
				21mux:5:(0,0):(33): 21mux.gdf;
				21mux:5:(0,0):(36): 21mux.gdf;
				21mux:5:(0,0):(35): 21mux.gdf;
				21mux:5:(0,0):(34): 21mux.gdf;
			}
			rg_lr:3:(0,0):(63): rg_lr.gdf
			{
				reg:4:(0,0):(16): reg.gdf;
				21mux:5:(0,0):(33): 21mux.gdf;
				21mux:5:(0,0):(36): 21mux.gdf;
				21mux:5:(0,0):(35): 21mux.gdf;
				21mux:5:(0,0):(34): 21mux.gdf;
			}
			rg_lr:3:(0,0):(62): rg_lr.gdf
			{
				reg:4:(0,0):(16): reg.gdf;
				21mux:5:(0,0):(33): 21mux.gdf;
				21mux:5:(0,0):(36): 21mux.gdf;
				21mux:5:(0,0):(35): 21mux.gdf;
				21mux:5:(0,0):(34): 21mux.gdf;
			}
		}
		rg::(0,0):(3): rg.gdf;
		rg::(0,0):(5): rg.gdf;
		stack::(0,0):(4): stack.gdf;
		mux4b1::(0,0):(22): mux4b1.gdf
		{
			mux41:7:(0,0):(25): mux41.gdf;
			mux41:7:(0,0):(28): mux41.gdf;
			mux41:7:(0,0):(27): mux41.gdf;
			mux41:7:(0,0):(26): mux41.gdf;
		}
		incr::(0,0):(28): incr.gdf;
	}
}
