-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "Sound-Studio"."Instrument"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name "char"[] NOT NULL,
    type "char"[] NOT NULL,
    rent integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Sound-Studio"."Room"
(
    id integer NOT NULL,
    square integer NOT NULL,
    rent integer NOT NULL,
    "personsCount" integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Sound-Studio"."Record Type"
(
    id integer NOT NULL,
    type "char"[] NOT NULL,
    genre "char"[],
    "stereo/mono" "char"[] NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Sound-Studio"."Artist"
(
    id integer NOT NULL,
    name "char"[] NOT NULL,
    genre "char"[] NOT NULL,
    "personsCount" integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Sound-Studio"."Employee"
(
    id integer NOT NULL,
    job "char"[] NOT NULL,
    "workShift" integer NOT NULL,
    name "char"[] NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Sound-Studio"."Record"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    "totalPrice" integer NOT NULL,
    "hoursCount" integer NOT NULL,
    date date NOT NULL,
    "recordTypeId" integer NOT NULL,
    "employeeId" integer NOT NULL,
    "roomId" integer NOT NULL,
    "artistId" integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Sound-Studio"."Instrument_Record"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    "Instruments_id" integer NOT NULL,
    "Record_id" integer NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS "Sound-Studio"."Record"
    ADD FOREIGN KEY ("recordTypeId")
    REFERENCES "Sound-Studio"."Record Type" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Sound-Studio"."Record"
    ADD FOREIGN KEY ("employeeId")
    REFERENCES "Sound-Studio"."Employee" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Sound-Studio"."Record"
    ADD FOREIGN KEY ("artistId")
    REFERENCES "Sound-Studio"."Artist" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Sound-Studio"."Record"
    ADD FOREIGN KEY ("roomId")
    REFERENCES "Sound-Studio"."Room" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Sound-Studio"."Instrument_Record"
    ADD FOREIGN KEY ("Instruments_id")
    REFERENCES "Sound-Studio"."Instrument" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Sound-Studio"."Instrument_Record"
    ADD FOREIGN KEY ("Record_id")
    REFERENCES "Sound-Studio"."Record" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;