HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	21mux.gdf
	{
		21mux [] []
		{
			5 [] [];
		}
	}
	lpm_rom.tdf
	{
		lpm_rom [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_WIDTHAD,LPM_NUMWORDS,LPM_ADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=REGISTERED,LPM_FILE,DEVICE_FAMILY] [aglobal.inc,altrom.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_WIDTHAD=5,LPM_NUMWORDS=32,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE="d:\sss\lab1\lpm_rom.mif",DEVICE_FAMILY=FLEX10K] [address4,address3,address2,address1,address0,q3,q2,q1,q0];
		}
	}
	altrom.tdf
	{
		altrom [USE_LPM_FOR_AHDL_OPERATORS,WIDTH,AD_WIDTH,NUMWORDS,FILE,REGISTERINPUTMODE=DEFAULT,DEVICE_FAMILY] [aglobal.inc,lpm_mux.inc,lpm_decode.inc,memmodes.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=8,AD_WIDTH=5,NUMWORDS=32,FILE="d:\sss\lab1\lpm_rom.mif",REGISTERINPUTMODE=DEFAULT,DEVICE_FAMILY=FLEX10K] [Address0,Address1,Address2,Address3,Address4,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7];
		}
	}
	mux41.gdf
	{
		mux41 [] []
		{
			1 [] [];
		}
	}
	busmux21.gdf
	{
		busmux21 [] []
		{
			4 [] [];
		}
	}
	rg.gdf
	{
		rg [] []
		{
			7 [] [];
		}
	}
	k1804.gdf
	{
		k1804 [] []
		{
			6 [] [];
		}
	}
	incr.gdf
	{
		incr [] []
		{
			8 [] [];
		}
	}
	bus4mux41.gdf
	{
		bus4mux41 [] []
		{
			9 [] [];
		}
	}
	reg.gdf
	{
		reg [] []
		{
			12 [] [];
		}
	}
	stack.gdf
	{
		stack [] []
		{
			10 [] [];
		}
	}
	rg_lr.gdf
	{
		rg_lr [] []
		{
			11 [] [];
		}
	}
	bus5mux21.gdf
	{
		bus5mux21 [] []
		{
			14 [] [];
		}
	}
	pa.gdf
	{
		pa [] []
		{
			13 [] [];
		}
	}
	lab1.gdf
	{
		lab1 [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	lab1::(0,0):(0): lab1.gdf
	{
		pa::(0,0):(37): pa.gdf
		{
			bus5mux21:14:(0,0):(1): bus5mux21.gdf
			{
				21mux:5:(0,0):(8): 21mux.gdf;
				21mux:5:(0,0):(13): 21mux.gdf;
				21mux:5:(0,0):(7): 21mux.gdf;
				21mux:5:(0,0):(6): 21mux.gdf;
				21mux:5:(0,0):(5): 21mux.gdf;
			}
			busmux21:4:(0,0):(2): busmux21.gdf
			{
				21mux:5:(0,0):(1): 21mux.gdf;
				21mux:5:(0,0):(4): 21mux.gdf;
				21mux:5:(0,0):(3): 21mux.gdf;
				21mux:5:(0,0):(2): 21mux.gdf;
			}
		}
		k1804::(0,0):(30): k1804.gdf
		{
			rg:7:(0,0):(3): rg.gdf;
			rg:7:(0,0):(5): rg.gdf;
			incr:8:(0,0):(28): incr.gdf;
			bus4mux41:9:(0,0):(30): bus4mux41.gdf
			{
				mux41:1:(0,0):(3): mux41.gdf;
				mux41:1:(0,0):(2): mux41.gdf;
				mux41:1:(0,0):(1): mux41.gdf;
				mux41:1:(0,0):(4): mux41.gdf;
			}
			stack:10:(0,0):(35): stack.gdf
			{
				rg_lr:11:(0,0):(61): rg_lr.gdf
				{
					reg:12:(0,0):(16): reg.gdf;
					21mux:5:(0,0):(33): 21mux.gdf;
					21mux:5:(0,0):(36): 21mux.gdf;
					21mux:5:(0,0):(35): 21mux.gdf;
					21mux:5:(0,0):(34): 21mux.gdf;
				}
				rg_lr:11:(0,0):(64): rg_lr.gdf
				{
					reg:12:(0,0):(16): reg.gdf;
					21mux:5:(0,0):(33): 21mux.gdf;
					21mux:5:(0,0):(36): 21mux.gdf;
					21mux:5:(0,0):(35): 21mux.gdf;
					21mux:5:(0,0):(34): 21mux.gdf;
				}
				rg_lr:11:(0,0):(63): rg_lr.gdf
				{
					reg:12:(0,0):(16): reg.gdf;
					21mux:5:(0,0):(33): 21mux.gdf;
					21mux:5:(0,0):(36): 21mux.gdf;
					21mux:5:(0,0):(35): 21mux.gdf;
					21mux:5:(0,0):(34): 21mux.gdf;
				}
				rg_lr:11:(0,0):(62): rg_lr.gdf
				{
					reg:12:(0,0):(16): reg.gdf;
					21mux:5:(0,0):(33): 21mux.gdf;
					21mux:5:(0,0):(36): 21mux.gdf;
					21mux:5:(0,0):(35): 21mux.gdf;
					21mux:5:(0,0):(34): 21mux.gdf;
				}
			}
		}
		busmux21::(0,0):(4): busmux21.gdf
		{
			21mux:5:(0,0):(1): 21mux.gdf;
			21mux:5:(0,0):(4): 21mux.gdf;
			21mux:5:(0,0):(3): 21mux.gdf;
			21mux:5:(0,0):(2): 21mux.gdf;
		}
		lpm_rom::(0,0):(3): lpm_rom.tdf
		{
			altrom:3:(63,3):(43,srom): altrom.tdf;
		}
		mux41::(0,0):(2): mux41.gdf;
	}
}
